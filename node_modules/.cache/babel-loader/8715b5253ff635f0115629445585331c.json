{"ast":null,"code":"var _jsxFileName = \"D:\\\\workshop\\\\imc\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /* estados (ou useState) é algo mutável, ou seja, pode trocar de valor conforme a minha aplicação sem que eu tenha que recarregar a página. Então ele salva esses valores como se fosse uma variável para mim ter acesso depois */\n  const [peso, setPeso] = useState('');\n  const [altura, setAltura] = useState('');\n  const [mensagem, setMensagem] = useState('');\n\n  function calcularIMC() {\n    const alt = altura / 100;\n    const imc = peso / (alt * alt);\n\n    if (imc <= 16.9) {\n      setMensagem(\"Você está Muito abaixo do peso! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc > 16.9 && imc <= 18.4) {\n      setMensagem(\"Você está abaixo do peso! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc >= 18.4 && imc < 25) {\n      setMensagem(\"Peso ideal! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc > 24.9 && imc < 30) {\n      setMensagem(\"Você está levemente acima do peso! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc >= 30 && imc < 34.9) {\n      setMensagem(\"Você está com obesidade grau I! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc >= 34.9 && imc < 39.9) {\n      setMensagem(\"Você está com obesidade grau II! Seu IMC: \" + imc.toFixed(1));\n    } else if (imc > 39.9) {\n      setMensagem(\"Você está com obesidade grau III! Seu IMC: \" + imc.toFixed(1));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calculadora IMC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Vamos calcular seu imc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Peso em (kg) Ex: 70\",\n        value: peso,\n        onChange: e => setPeso(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Altura em (cm) Ex: 176\",\n        value: altura,\n        onChange: e => setAltura(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calcularIMC,\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gU/WBqz+a1Ae8/hnL/uUeTze904=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/workshop/imc/src/App.js"],"names":["useState","App","peso","setPeso","altura","setAltura","mensagem","setMensagem","calcularIMC","alt","imc","toFixed","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;;AAEA,eAAe,SAASC,GAAT,GAAc;AAAA;;AAE3B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAGA,WAASQ,WAAT,GAAsB;AACpB,UAAMC,GAAG,GAAGL,MAAM,GAAG,GAArB;AACA,UAAMM,GAAG,GAAGR,IAAI,IAAIO,GAAG,GAAGA,GAAV,CAAhB;;AAEA,QAAGC,GAAG,IAAI,IAAV,EAAe;AACbH,MAAAA,WAAW,CAAC,8CAA6CG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAA9C,CAAX;AACD,KAFD,MAEM,IAAGD,GAAG,GAAG,IAAN,IAAcA,GAAG,IAAI,IAAxB,EAA6B;AACjCH,MAAAA,WAAW,CAAC,wCAAuCG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAxC,CAAX;AACD,KAFK,MAEA,IAAGD,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAG,EAAxB,EAA2B;AAC/BH,MAAAA,WAAW,CAAC,0BAAyBG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAA1B,CAAX;AACD,KAFK,MAEA,IAAGD,GAAG,GAAG,IAAN,IAAcA,GAAG,GAAG,EAAvB,EAA0B;AAC9BH,MAAAA,WAAW,CAAC,iDAAgDG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAjD,CAAX;AACD,KAFK,MAEA,IAAGD,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,IAAtB,EAA2B;AAC/BH,MAAAA,WAAW,CAAC,8CAA6CG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAA9C,CAAX;AACD,KAFK,MAEA,IAAGD,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAG,IAAxB,EAA6B;AACjCH,MAAAA,WAAW,CAAC,+CAA8CG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAA/C,CAAX;AACD,KAFK,MAEA,IAAGD,GAAG,GAAG,IAAT,EAAc;AAClBH,MAAAA,WAAW,CAAC,gDAA+CG,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAhD,CAAX;AACD;AAEF;;AAGD,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,qBAFd;AAGE,QAAA,KAAK,EAAET,IAHT;AAIE,QAAA,QAAQ,EAAGU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,KAAK,EAAEV,MAHT;AAIE,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAQ,QAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAuBE;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA3DuBL,G;;KAAAA,G","sourcesContent":["import { useState } from 'react'\nimport './app.css'\n\nexport default function App(){\n\n  /* estados (ou useState) é algo mutável, ou seja, pode trocar de valor conforme a minha aplicação sem que eu tenha que recarregar a página. Então ele salva esses valores como se fosse uma variável para mim ter acesso depois */\n  const [peso, setPeso] = useState('');\n  const [altura, setAltura] = useState('');\n\n  const [mensagem, setMensagem] = useState('');\n\n\n  function calcularIMC(){\n    const alt = altura / 100;\n    const imc = peso / (alt * alt);\n\n    if(imc <= 16.9){\n      setMensagem(\"Você está Muito abaixo do peso! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc > 16.9 && imc <= 18.4){\n      setMensagem(\"Você está abaixo do peso! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc >= 18.4 && imc < 25){\n      setMensagem(\"Peso ideal! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc > 24.9 && imc < 30){\n      setMensagem(\"Você está levemente acima do peso! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc >= 30 && imc < 34.9){\n      setMensagem(\"Você está com obesidade grau I! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc >= 34.9 && imc < 39.9){\n      setMensagem(\"Você está com obesidade grau II! Seu IMC: \" +imc.toFixed(1))\n    }else if(imc > 39.9){\n      setMensagem(\"Você está com obesidade grau III! Seu IMC: \" +imc.toFixed(1))\n    }\n    \n  }\n\n\n  return(\n    <div className=\"app\">\n      <h1>Calculadora IMC</h1>\n      <span>Vamos calcular seu imc</span>\n\n      <div className=\"area-input\">\n        <input \n          type=\"text\" \n          placeholder=\"Peso em (kg) Ex: 70\"\n          value={peso}\n          onChange={(e) => setPeso(e.target.value)}\n        />\n        <input \n          type=\"text\" \n          placeholder=\"Altura em (cm) Ex: 176\"\n          value={altura}\n          onChange={(e) => setAltura(e.target.value)}\n        />\n\n        <button onClick={calcularIMC}>\n          Calcular\n        </button>\n      </div>\n\n      <h2>{mensagem}</h2>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}